{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/tutorials';\nexport class TutorialService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByTitle(title) {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n}\nTutorialService.ɵfac = function TutorialService_Factory(t) {\n  return new (t || TutorialService)(i0.ɵɵinject(i1.HttpClient));\n};\nTutorialService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TutorialService,\n  factory: TutorialService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["baseUrl","TutorialService","constructor","http","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByTitle","title","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Dev_3\\Desktop\\Nefolder\\Api\\frontend\\angular-16-crud\\src\\app\\services\\tutorial.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Tutorial } from '../models/tutorial.model';\n\nconst baseUrl = 'http://localhost:8080/api/tutorials';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TutorialService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Tutorial[]> {\n    return this.http.get<Tutorial[]>(baseUrl);\n  }\n\n  get(id: any): Observable<Tutorial> {\n    return this.http.get<Tutorial>(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByTitle(title: any): Observable<Tutorial[]> {\n    return this.http.get<Tutorial[]>(`${baseUrl}?title=${title}`);\n  }\n}"],"mappings":";;AAKA,MAAMA,OAAO,GAAG,qCAAqC;AAKrD,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAaL,OAAO,CAAC;EAC3C;EAEAK,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAW,GAAGL,OAAO,IAAIM,EAAE,EAAE,CAAC;EACpD;EAEAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;EACtC;EAEAE,MAAMA,CAACJ,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGX,OAAO,IAAIM,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChD;EAEAI,MAAMA,CAACN,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC7C;EAEAO,SAASA,CAAA;IACP,OAAO,IAAI,CAACV,IAAI,CAACS,MAAM,CAACZ,OAAO,CAAC;EAClC;EAEAc,WAAWA,CAACC,KAAU;IACpB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAa,GAAGL,OAAO,UAAUe,KAAK,EAAE,CAAC;EAC/D;;AA9BWd,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}